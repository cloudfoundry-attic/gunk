// This file was generated by counterfeiter
package execfakes

import (
	"sync"

	"github.com/cloudfoundry/gunk/os_wrap/exec_wrap"
)

type FakeExec struct {
	CommandStub        func(name string, arg ...string) exec_wrap.Cmd
	commandMutex       sync.RWMutex
	commandArgsForCall []struct {
		name string
		arg  []string
	}
	commandReturns struct {
		result1 exec_wrap.Cmd
	}
}

func (fake *FakeExec) Command(name string, arg ...string) exec_wrap.Cmd {
	fake.commandMutex.Lock()
	fake.commandArgsForCall = append(fake.commandArgsForCall, struct {
		name string
		arg  []string
	}{name, arg})
	fake.commandMutex.Unlock()
	if fake.CommandStub != nil {
		return fake.CommandStub(name, arg...)
	} else {
		return fake.commandReturns.result1
	}
}

func (fake *FakeExec) CommandCallCount() int {
	fake.commandMutex.RLock()
	defer fake.commandMutex.RUnlock()
	return len(fake.commandArgsForCall)
}

func (fake *FakeExec) CommandArgsForCall(i int) (string, []string) {
	fake.commandMutex.RLock()
	defer fake.commandMutex.RUnlock()
	return fake.commandArgsForCall[i].name, fake.commandArgsForCall[i].arg
}

func (fake *FakeExec) CommandReturns(result1 exec_wrap.Cmd) {
	fake.CommandStub = nil
	fake.commandReturns = struct {
		result1 exec_wrap.Cmd
	}{result1}
}

var _ exec_wrap.Exec = new(FakeExec)
